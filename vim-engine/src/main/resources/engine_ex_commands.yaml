# This file was automatically generated by [com.intellij.vim.processor.EXCommandProcessor].
# If you are going to change it, you are probably doing something wrong, as your changes will be overridden by the next `gradle kspKotlin` run.

action: com.maddyhome.idea.vim.vimscript.model.commands.ActionCommand
as[cii]: com.maddyhome.idea.vim.vimscript.model.commands.AsciiCommand
bd[elete]: com.maddyhome.idea.vim.vimscript.model.commands.BufferCloseCommand
cal[l]: com.maddyhome.idea.vim.vimscript.model.commands.CallCommand
comc[lear]: com.maddyhome.idea.vim.vimscript.model.commands.CmdClearCommand
com[mand]: com.maddyhome.idea.vim.vimscript.model.commands.CmdCommand
t,co[py]: com.maddyhome.idea.vim.vimscript.model.commands.CopyTextCommand
delc[ommand]: com.maddyhome.idea.vim.vimscript.model.commands.DelCmdCommand
d[elete]: com.maddyhome.idea.vim.vimscript.model.commands.DeleteLinesCommand
delm[arks]: com.maddyhome.idea.vim.vimscript.model.commands.DeleteMarksCommand
delf[unction]: com.maddyhome.idea.vim.vimscript.model.commands.DelfunctionCommand
dig[raphs]: com.maddyhome.idea.vim.vimscript.model.commands.DigraphCommand
dump[line]: com.maddyhome.idea.vim.vimscript.model.commands.DumpLineCommand
ec[ho]: com.maddyhome.idea.vim.vimscript.model.commands.EchoCommand
e[dit],bro[wse]: com.maddyhome.idea.vim.vimscript.model.commands.EditFileCommand
exe[cute]: com.maddyhome.idea.vim.vimscript.model.commands.ExecuteCommand
qa[ll],xa[ll],wqa[ll],quita[ll]: com.maddyhome.idea.vim.vimscript.model.commands.ExitCommand
f[ile]: com.maddyhome.idea.vim.vimscript.model.commands.FileCommand
cla[ss]: com.maddyhome.idea.vim.vimscript.model.commands.FindClassCommand
fin[d]: com.maddyhome.idea.vim.vimscript.model.commands.FindFileCommand
sym[bol]: com.maddyhome.idea.vim.vimscript.model.commands.FindSymbolCommand
go[to]: com.maddyhome.idea.vim.vimscript.model.commands.GotoCharacterCommand
his[tory]: com.maddyhome.idea.vim.vimscript.model.commands.HistoryCommand
j[oin]: com.maddyhome.idea.vim.vimscript.model.commands.JoinLinesCommand
ju[mps]: com.maddyhome.idea.vim.vimscript.model.commands.JumpsCommand
let: com.maddyhome.idea.vim.vimscript.model.commands.LetCommand
lockv[ar]: com.maddyhome.idea.vim.vimscript.model.commands.LockVarCommand
unlo[ckvar]: com.maddyhome.idea.vim.vimscript.model.commands.UnlockVarCommand
k,ma[rks]: com.maddyhome.idea.vim.vimscript.model.commands.MarkCommand
m[ove]: com.maddyhome.idea.vim.vimscript.model.commands.MoveTextCommand
n[ext],bn[ext]: com.maddyhome.idea.vim.vimscript.model.commands.NextFileCommand
tabn[ext]: com.maddyhome.idea.vim.vimscript.model.commands.NextTabCommand
noh[lsearch]: com.maddyhome.idea.vim.vimscript.model.commands.NoHLSearchCommand
norm[al]: com.maddyhome.idea.vim.vimscript.model.commands.NormalCommand
on[ly]: com.maddyhome.idea.vim.vimscript.model.commands.OnlyCommand
pa[ckadd]: com.maddyhome.idea.vim.vimscript.model.commands.PackaddCommand
Plug[in]: com.maddyhome.idea.vim.vimscript.model.commands.PlugCommand
prev[ious],bp[revious],N[ext]: com.maddyhome.idea.vim.vimscript.model.commands.PreviousFileCommand
tabp[previous],tabN[ext]: com.maddyhome.idea.vim.vimscript.model.commands.PreviousTabCommand
p[rint],P[rint]: com.maddyhome.idea.vim.vimscript.model.commands.PrintCommand
pro[mptfind]: com.maddyhome.idea.vim.vimscript.model.commands.PromptFindCommand
promptr[eplace]: com.maddyhome.idea.vim.vimscript.model.commands.PromptReplaceCommand
pu[t]: com.maddyhome.idea.vim.vimscript.model.commands.PutLinesCommand
q[uit],clo[se],hi[de]: com.maddyhome.idea.vim.vimscript.model.commands.QuitCommand
red[o]: com.maddyhome.idea.vim.vimscript.model.commands.RedoCommand
dis[play],reg[isters]: com.maddyhome.idea.vim.vimscript.model.commands.RegistersCommand
'@': com.maddyhome.idea.vim.vimscript.model.commands.RepeatCommand
argu[ment]: com.maddyhome.idea.vim.vimscript.model.commands.SelectFileCommand
fir[st]: com.maddyhome.idea.vim.vimscript.model.commands.SelectFirstFileCommand
la[st]: com.maddyhome.idea.vim.vimscript.model.commands.SelectLastFileCommand
se[t]: com.maddyhome.idea.vim.vimscript.model.commands.SetCommand
setl[ocal]: com.maddyhome.idea.vim.vimscript.model.commands.SetLocalCommand
sethandler: com.maddyhome.idea.vim.vimscript.model.commands.SetHandlerCommand
sh[ell]: com.maddyhome.idea.vim.vimscript.model.commands.ShellCommand
sor[t]: com.maddyhome.idea.vim.vimscript.model.commands.SortCommand
so[urce]: com.maddyhome.idea.vim.vimscript.model.commands.SourceCommand
sp[lit],vs[plit]: com.maddyhome.idea.vim.vimscript.model.commands.SplitCommand
~,&,s[ubstitute]: com.maddyhome.idea.vim.vimscript.model.commands.SubstituteCommand
tabc[lose]: com.maddyhome.idea.vim.vimscript.model.commands.TabCloseCommand
tabm[ove]: com.maddyhome.idea.vim.vimscript.model.commands.TabMoveCommand
tabo[nly]: com.maddyhome.idea.vim.vimscript.model.commands.TabOnlyCommand
u[ndo]: com.maddyhome.idea.vim.vimscript.model.commands.UndoCommand
wa[ll]: com.maddyhome.idea.vim.vimscript.model.commands.WriteAllCommand
w[rite]: com.maddyhome.idea.vim.vimscript.model.commands.WriteCommand
wn[ext]: com.maddyhome.idea.vim.vimscript.model.commands.WriteNextFileCommand
wp[revious],wN[ext]: com.maddyhome.idea.vim.vimscript.model.commands.WritePreviousFileCommand
wq,x[it],exi[t]: com.maddyhome.idea.vim.vimscript.model.commands.WriteQuitCommand
y[ank]: com.maddyhome.idea.vim.vimscript.model.commands.YankLinesCommand
mapc[lear],nmapc[lear],vmapc[lear],xmapc[lear],smapc[lear],omapc[lear],mapc[lear],imapc[lear],lmapc[lear],cmapc[lear]: com.maddyhome.idea.vim.vimscript.model.commands.mapping.MapClearCommand
? map,nm[ap],vm[ap],xm[ap],smap,om[ap],im[ap],lm[ap],cm[ap],no[map],nn[oremap],vn[oremap],xn[oremap],snor[emap],ono[remap],no[remap],ino[remap],ln[oremap],cno[remap]
: com.maddyhome.idea.vim.vimscript.model.commands.mapping.MapCommand
unm[ap],nun[map],vu[nmap],xu[nmap],sunm[ap],ou[nmap],unm[ap],iu[nmap],lu[nmap],cu[nmap]: com.maddyhome.idea.vim.vimscript.model.commands.mapping.UnMapCommand
